{"version":3,"sources":["recoils/characters.js","components/Add.jsx","components/Edit.jsx","recoils/loaded.js","components/Task.jsx","recoils/data.js","components/Top.jsx","components/Info.jsx","recoils/info.js","components/List.jsx","components/Loading.jsx","components/Footer.jsx","App.jsx","index.js"],"names":["charState","atom","key","default","Add","props","useRecoilState","char","setChar","useState","msg","setMsg","loading","document","getElementById","finished","a","onInfo","classList","remove","post","title","value","completed","fetch","method","headers","body","JSON","stringify","res","data","json","add","showMessage","code","onRefresh","className","id","onChange","e","target","length","setTimeout","contains","onClick","postTodo","then","console","log","catch","err","to","Edit","nr","txt","item","Fragment","name","placeholder","onUpdate","loadState","Task","isLoaded","useRecoilValue","x","y","z","edit","editTask","querySelectorAll","forEach","onDelete","dataState","status","all","undone","done","Top","Info","info","infoState","List","setData","setInfo","setIsLoaded","downloadData","fetchData","filter","f","checkData","type","tasks","xmlns","width","height","fill","viewBox","d","map","el","deleteTask","showInfo","updateTask","createComponent","window","confirm","patch","checkUpdate","val","useEffect","exact","path","Loading","Footer","App","ReactDOM","render","basename","process"],"mappings":"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","file":"static/js/main.0b3d6c85.chunk.js","sourcesContent":["import { atom } from 'recoil';\r\n\r\nconst charState = atom({\r\n    key: 'characters',\r\n    default: 0\r\n})\r\n\r\nexport default charState;","import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport charState from '../recoils/characters';\r\n\r\n\r\nfunction Add(props) {\r\n    const [ char, setChar ] = useRecoilState(charState);\r\n    const [ msg, setMsg ] = useState('')\r\n\r\n    const loading = document.getElementById('loading'),\r\n    finished = document.getElementById('finished');\r\n\r\n    async function postTodo() {\r\n        if (char > 200) {\r\n            props.onInfo('It\\'s soooo many letters! I\\'m not sure I can handle it :(')\r\n            return;\r\n        } else if (char < 5) {\r\n            props.onInfo('Oh, come on! Don\\'t give me empty task! At least 5 characters would be nice :)')\r\n            return;\r\n        }\r\n        loading.classList.remove('invis');\r\n\r\n        const post = {\r\n\r\n            title: document.getElementById('title').value,\r\n            completed: false\r\n        }\r\n\r\n        const res = await fetch('https://gorest.co.in/public-api/users/125/todos', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Authorization':'Bearer a72dccbb572f8052c337da5c29c96abfe9096b6207999d422cc88b28ec6e55a9'\r\n            },\r\n            body: JSON.stringify(post)\r\n        })\r\n        const data = res.json();\r\n        loading.classList.add('invis');\r\n        showMessage(data.code);\r\n        finished.classList.remove('invis');\r\n        props.onRefresh();\r\n        setChar(0);\r\n        return data;\r\n    }\r\n\r\n    function showMessage(res) {\r\n        if (res >= 400) {\r\n            setMsg('Ooops, something bad happened to Mr Server! Try again later :/')\r\n        } else {\r\n            setMsg('New task added succesfully!');\r\n        }\r\n    }\r\n\r\n    function checkCount() {\r\n        if (char > 200) {\r\n            document.getElementById('maxValue').classList.add('red');\r\n        } else if (char <= 200) {\r\n            if (document.getElementById('maxValue').classList.contains('red')) {\r\n                document.getElementById('maxValue').classList.remove('red');\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"add\">\r\n            <div className=\"add-title\">\r\n                <h1>Let's add some new challenges!</h1>\r\n            </div>\r\n            <div className=\"add-form\">\r\n                <p><b>{char} / <span id=\"maxValue\">200</span></b></p>\r\n                <textarea id=\"title\" onChange={e => {\r\n                    setChar(e.target.value.length)\r\n                    setTimeout(() => {\r\n                        checkCount();\r\n                    }, 200);\r\n                }}></textarea>\r\n                <br />\r\n                <br />\r\n                <button className=\"btn g m-r\" onClick={() => {\r\n                    postTodo()\r\n                    .then(res => console.log(res))\r\n                    .catch(err => console.log(err))\r\n                }}>\r\n                    Utwórz nową notatkę!\r\n                </button>\r\n                <Link to=\"/\"><button className=\"btn r\">Powrót do listy</button></Link>\r\n            </div>\r\n            <div id=\"finished\" className=\"invis\">\r\n                <span>\r\n                    <h2>{msg}</h2>\r\n                    <Link to=\"/\"><button className=\"btn g\" onClick={() => finished.classList.add('invis')}>Let's go back to work!</button></Link>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default Add;","import React, { useState } from 'react';\r\n\r\nfunction Edit(props) {\r\n    const [ char, setChar ] = useState(0);\r\n    const { nr, txt, item } = props;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"editing-txt\">\r\n                <textarea name=\"edit\" placeholder={txt} id={`edited${nr}`} onChange={e => setChar(e.target.value.length)}></textarea>\r\n                <p>{char} / 200</p>\r\n            </div>\r\n            <button className=\"btn g\" onClick={() => {\r\n                const value = document.getElementById(`edited${nr}`).value;\r\n                props.onUpdate('EDITED', item, value);\r\n            }}>\r\n                Save\r\n            </button>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Edit;","import { atom } from 'recoil';\r\n\r\nconst loadState = atom({\r\n    key: 'is loaded',\r\n    default: false\r\n})\r\n\r\nexport default loadState;","import Edit from './Edit';\r\nimport loadState from '../recoils/loaded';\r\nimport { useRecoilValue } from 'recoil';\r\n\r\nfunction Task(props) {\r\n    const { item, nr } = props;\r\n    const { completed, title } = item;\r\n    const isLoaded = useRecoilValue(loadState);\r\n\r\n\r\n    function editTask(x) {\r\n        if (isLoaded === false) {\r\n            return props.onInfo('Oh, boo hoo! Here comes the fastest finger on the west, huh? Nice try :P')\r\n        }\r\n\r\n        const edit = document.getElementById(`edit${x}`).classList;\r\n\r\n        if (edit.contains('invis-hide')) {\r\n            edit.remove('invis-hide');\r\n        } else {\r\n            edit.add('invis-hide');\r\n        }\r\n    }\r\n\r\n    function resetTasks() {\r\n        document.querySelectorAll('.editing').forEach(e => {\r\n            if (!e.classList.contains('invis-hide')) e.classList.add('invis-hide')\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"main-list_item\">\r\n            <span className=\"marked\">\r\n                {completed ? <h2><i className=\"bi bi-check-lg green\"></i></h2>:<h2><i className=\"bi bi-x-lg red\"></i></h2>}\r\n                <h2>ToDo #{nr}</h2>\r\n            </span>\r\n            <span className=\"text\">\r\n                <p>{title}</p>\r\n            <div className=\"editing invis-hide\" id={`edit${nr}`}>\r\n                <Edit nr={nr} txt={title} item={item} onUpdate={(x, y, z) => props.onUpdate(x, y, z)} />\r\n            </div>\r\n            </span>\r\n            <span className=\"options\">\r\n                {completed ? <h2 onClick={() => props.onInfo('Firstly you need to undone the task!')}><i className=\"bi bi-pencil edit\"></i></h2>:<h2 onClick={() => editTask(nr)}><i className=\"bi bi-pencil edit\"></i></h2>}\r\n                {completed ? <h2 onClick={() => props.onUpdate('UNDONE', item)}><i className=\"bi bi-x-lg undone\"></i></h2>:<h2 onClick={() => {resetTasks();props.onUpdate('DONE', item)}}><i className=\"bi bi-check-lg done\"></i></h2>}\r\n                <h2 onClick={() => props.onDelete(item)}><i className=\"bi bi-trash trash\"></i></h2>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task;","import { atom } from 'recoil';\r\n\r\nconst dataState = atom({\r\n    key: 'data',\r\n    default: {\r\n        status: 'NO_DATA',\r\n        all: [],\r\n        undone: [],\r\n        done: []\r\n    }\r\n})\r\n\r\nexport default dataState;","import React from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { Link } from 'react-router-dom';\r\nimport dataState from '../recoils/data';\r\n\r\nfunction Top() {\r\n    const data = useRecoilValue(dataState);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"main-title\">\r\n                <h1>Hello! I hope you're feeling great today!</h1>\r\n                <h2>Here's some of your tasks!</h2>\r\n            </div>\r\n            <div className=\"main-counter\">\r\n                <span className=\"count m-r\">Filter by</span>\r\n                <Link to=\"/\"><span className=\"count m-r\"><i className=\"bi bi-card-checklist green\"></i> All tasks: {data.all.length}</span></Link>\r\n                <Link to=\"/done\"><span className=\"count m-r\"><i className=\"bi bi-check-square green\"></i> Tasks done: {data.done.length > 0 ? data.done.length:0}</span></Link>\r\n                <Link to=\"/undone\"><span className=\"count\"><i className=\"bi bi-x-square red\"></i> Tasks undone: {data.undone.length > 0 ? data.undone.length:0}</span></Link>\r\n                <Link to=\"/add\"><div id=\"add\"><i className=\"bi bi-plus-lg\"></i></div></Link>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Top;","function Info(props) {\r\n    const { info } = props;\r\n\r\n    return (\r\n        <div id=\"info\" className=\"invis\">\r\n            <span>\r\n                <h2>{info}</h2>\r\n                <button className=\"btn g\" onClick={() => document.getElementById('info').classList.add('invis')}>Okay!</button>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Info;","import { atom } from 'recoil';\r\n\r\nconst infoState = atom({\r\n    key: 'info',\r\n    default: ''\r\n})\r\n\r\nexport default infoState;","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { useRecoilState } from 'recoil';\r\nimport Add from './Add';\r\nimport Task from './Task';\r\nimport Top from './Top';\r\nimport Info from './Info';\r\nimport dataState from '../recoils/data';\r\nimport infoState from '../recoils/info';\r\nimport loadState from '../recoils/loaded';\r\n\r\nfunction List() {\r\n    const [ data, setData ] = useRecoilState(dataState),\r\n    [ info, setInfo ] = useRecoilState(infoState),\r\n    [ isLoaded, setIsLoaded ] = useRecoilState(loadState),\r\n    loading = document.getElementById('loading');\r\n\r\n    async function fetchData() {\r\n        const res = await fetch('https://gorest.co.in/public-api/users/125/todos?access-token=a72dccbb572f8052c337da5c29c96abfe9096b6207999d422cc88b28ec6e55a9');\r\n        const data = res.json();\r\n        return data;\r\n    }\r\n\r\n    function downloadData() {\r\n        if (isLoaded === true) return;\r\n        fetchData()\r\n        .then(res => {\r\n            if (res.code === 200 && res.data.length === 0) {\r\n                setData({\r\n                    status:'NO_TASKS',\r\n                    all: res.data,\r\n                    undone: res.data.filter(f => f.completed === false),\r\n                    done: res.data.filter(f => f.completed === true)\r\n                });\r\n            } else if (res.code === 404) {\r\n                setData({\r\n                    status:'CONNECTION_ERR',\r\n                    all: res.data,\r\n                    undone: res.data.filter(f => f.completed === false),\r\n                    done: res.data.filter(f => f.completed === true)\r\n                });\r\n            } else if (res.code === 200 && res.data.length > 0) {\r\n                setData({\r\n                    status:'READY',\r\n                    all: res.data,\r\n                    undone: res.data.filter(f => f.completed === false),\r\n                    done: res.data.filter(f => f.completed === true)\r\n                });\r\n                setIsLoaded(true);\r\n            }\r\n        })\r\n        .catch(err => {setData(false);console.log(`I detected some pointless and unwanted errors! Have a nice tea! ${err}`)})\r\n    }\r\n\r\n    useEffect(() => {\r\n        downloadData();\r\n    })\r\n\r\n    function checkData(type) {\r\n        let tasks;\r\n\r\n        switch (type) {\r\n            case 'FILTER_UNDONE':\r\n                tasks = data.undone;\r\n                break;\r\n            case 'FILTER_DONE':\r\n                tasks = data.done;\r\n                break;\r\n            default:\r\n                tasks = data.all;\r\n                break;\r\n        };\r\n\r\n        switch(data.status) {\r\n            case 'NO_DATA':\r\n                return (\r\n                    <div id=\"loading\">\r\n                        <h2>\r\n                            Loading... \r\n                            <svg id=\"pencil\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-pencil\" viewBox=\"0 0 16 16\">\r\n                                <path d=\"M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z\"/>\r\n                            </svg>\r\n                        </h2>\r\n                    </div>\r\n                );\r\n            case 'NO_TASKS':\r\n                return (\r\n                    <div className=\"result\">\r\n                        Looks like there are no tasks available. Beer and chill? &#127866;&#128526;\r\n                    </div>\r\n                );\r\n            case 'CONNECTION_ERR':\r\n                return (\r\n                    <div className=\"result\">\r\n                        Oh no, something bad happened to the internet! &#128552; Check your connection or try again later! &#128521;\r\n                    </div>\r\n                );\r\n            default:\r\n                let nr = 0;\r\n                if (tasks.length === 0) return (\r\n                    <div className=\"result\">\r\n                        Looks like there are no tasks available. Beer and chill? &#127866;&#128526;\r\n                    </div>\r\n                )\r\n                return (\r\n                    tasks.map(el => {nr++;\r\n                        return <Task key={el.id} item={el} nr={nr} onDelete={(x) => deleteTask(x)} onInfo={(x) => showInfo(x)} onUpdate={(x, y, z) => updateTask(x, y, z)} />\r\n                    })\r\n                );\r\n        };\r\n    };\r\n\r\n    function createComponent(type) {\r\n        return (\r\n            <div className=\"main\">\r\n                <Top />\r\n                {checkData(type)}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    async function deleteTask(x) {\r\n        let check;\r\n        if (x.completed === false) {\r\n            check = window.confirm('Do you reaaally want to delete this task? It seems it\\'s not done yet :/');\r\n        } else {\r\n            check = window.confirm('Do you really want to delete this task? It\\'s done, so no problem ;)');\r\n        }\r\n        if (check) {\r\n            loading.classList.remove('invis');\r\n\r\n            const res = await fetch(`https://gorest.co.in/public-api/todos/${x.id}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Authorization':'Bearer a72dccbb572f8052c337da5c29c96abfe9096b6207999d422cc88b28ec6e55a9'\r\n                }\r\n            });\r\n            const data = res.json();\r\n            loading.classList.add('invis');\r\n            setIsLoaded(false);\r\n            return data;\r\n        };\r\n\r\n    };\r\n\r\n    async function updateTask(type, item, value) {\r\n        let patch = {};\r\n\r\n        switch (type) {\r\n            case 'DONE':\r\n                patch = {\r\n                    completed: true\r\n                };\r\n                break;\r\n            case 'UNDONE':\r\n                patch = {\r\n                    completed: false\r\n                };\r\n                break;\r\n            case 'EDITED':\r\n                if(!checkUpdate(value)) return;\r\n                patch = {\r\n                    title: value,\r\n                };\r\n                break;\r\n            default:\r\n                return;\r\n        };\r\n        loading.classList.remove('invis');\r\n\r\n        const res = await fetch(`https://gorest.co.in/public-api/todos/${item.id}`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Authorization':'Bearer a72dccbb572f8052c337da5c29c96abfe9096b6207999d422cc88b28ec6e55a9'\r\n            },\r\n            body: JSON.stringify(patch)\r\n        });\r\n\r\n        const data = res.json();\r\n        setIsLoaded(false);\r\n        loading.classList.add('invis');\r\n        return data;\r\n    };\r\n\r\n    function checkUpdate(val) {\r\n        if (val.length > 200) {\r\n            showInfo('Too many characters! I can\\'t handle it! :(');\r\n            return false;\r\n        } else if (val.length < 5) {\r\n            showInfo('Even a small task need some words to describe. Try at least 5 characters! :)')\r\n            return false;\r\n        } else {\r\n            return true;\r\n        };\r\n    };\r\n\r\n    function showInfo(txt) {\r\n        setInfo(txt);\r\n        document.getElementById('info').classList.remove('invis');\r\n    };\r\n\r\n    return (\r\n            <React.Fragment>\r\n                <Info info={info}/>\r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                            {createComponent()}\r\n                    </Route>\r\n                    <Route path=\"/undone\">\r\n                            {createComponent('FILTER_UNDONE')}\r\n                    </Route>\r\n                    <Route path=\"/done\">\r\n                            {createComponent('FILTER_DONE')}\r\n                    </Route>\r\n                    <Route path=\"/add\">\r\n                        <Add onRefresh={() => setIsLoaded(false)} onInfo={(x) => showInfo(x)} />\r\n                    </Route>\r\n                </Switch>\r\n            </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default List;\r\n","function Loading() {\r\n    return (\r\n        <div id=\"loading\" className=\"invis\">\r\n            <h2>\r\n                Loading... \r\n                <svg id=\"pencil\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-pencil\" viewBox=\"0 0 16 16\">\r\n                    <path d=\"M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z\"/>\r\n                </svg>\r\n            </h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading;","function Footer() {\r\n    return (\r\n        <div className=\"footer\">\r\n            <p>&reg; Copyright 2021 - Daniel Krawczyk</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import { RecoilRoot } from 'recoil';\r\nimport List from './components/List';\r\nimport Loading from './components/Loading';\r\nimport Footer from './components/Footer';\r\n\r\nfunction App() {\r\n    return (\r\n        <RecoilRoot>\r\n            <List />\r\n            <Loading />\r\n            <Footer />\r\n        </RecoilRoot>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport './styles/main.css';\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}