{"version":3,"sources":["recoils/characters.js","recoils/user.js","components/Add.jsx","components/Edit.jsx","recoils/loaded.js","components/Task.jsx","recoils/data.js","recoils/search.js","components/Top.jsx","components/Info.jsx","recoils/info.js","recoils/userData.js","components/List.jsx","components/Loading.jsx","components/Footer.jsx","App.jsx","index.js"],"names":["charState","atom","key","default","id","localStorage","JSON","parse","getItem","userID","Add","props","useRecoilState","char","setChar","user","useRecoilValue","useState","msg","setMsg","loading","document","getElementById","finished","a","onInfo","classList","remove","post","user_id","title","value","completed","fetch","method","headers","body","stringify","res","data","json","add","onRefresh","className","onChange","e","target","length","setTimeout","contains","onClick","postTodo","catch","err","console","log","to","Edit","nr","txt","item","Fragment","name","placeholder","onUpdate","loadState","Task","created_at","updated_at","isLoaded","el","showMoreInfo","x","y","z","edit","editTask","querySelectorAll","forEach","onDelete","dataState","status","all","undone","done","searchState","keyword","Top","search","setSearch","resetSearchVisibility","elem","type","c","filter","f","includes","Info","info","infoState","random","Math","toString","substr","gender","email","userData","List","setData","setInfo","setIsLoaded","setUser","postUser","isPosted","setIsPosted","downloadData","fetchData","then","code","updateDataState","checkData","tasks","xmlns","width","height","fill","viewBox","d","map","deleteTask","showInfo","updateTask","createComponent","window","confirm","patch","checkEdited","val","useEffect","fetchUser","fetchNewUser","resp","undefined","setItem","exact","path","Loading","Footer","App","ReactDOM","render","basename","process"],"mappings":"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","file":"static/js/main.183349be.chunk.js","sourcesContent":["import { atom } from 'recoil';\r\n\r\nconst charState = atom({\r\n    key: 'characters',\r\n    default: 0\r\n})\r\n\r\nexport default charState;","import { atom } from 'recoil';\r\nlet id = -1;\r\n\r\nif (\"id\" in localStorage) {\r\n    id = JSON.parse(localStorage.getItem(\"id\"));\r\n}\r\n\r\nconst userID = atom({\r\n    key:\"User ID info\",\r\n    default: id\r\n})\r\n\r\nexport default userID;","import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport charState from '../recoils/characters';\r\nimport userID from '../recoils/user';\r\n\r\n\r\nfunction Add(props) {\r\n    const [ char, setChar ] = useRecoilState(charState),\r\n    user = useRecoilValue(userID),\r\n    [ msg, setMsg ] = useState(''),\r\n    loading = document.getElementById('loading'),\r\n    finished = document.getElementById('finished');\r\n\r\n    async function postTodo() {\r\n        if (char > 200) {\r\n            props.onInfo('It\\'s soooo many letters! I\\'m not sure I can handle it :(')\r\n            return;\r\n        } else if (char < 5) {\r\n            props.onInfo('Oh, come on! Don\\'t give me empty task! At least 5 characters would be nice :)')\r\n            return;\r\n        }\r\n        loading.classList.remove('invis');\r\n\r\n        const post = {\r\n            user_id: 125,\r\n            title: document.getElementById('title').value,\r\n            completed: false\r\n        }\r\n\r\n        try {\r\n            const res = await fetch(`https://gorest.co.in/public-api/users/${user}/todos`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept':'application/json',\r\n                    'Content-Type':'application/json',\r\n                    'Authorization':'Bearer a72dccbb572f8052c337da5c29c96abfe9096b6207999d422cc88b28ec6e55a9'\r\n                },\r\n                body: JSON.stringify(post)\r\n            })\r\n            const data = res.json();\r\n            setMsg('New task added succesfully!')\r\n            return data;\r\n            \r\n            \r\n        } catch (err) {\r\n            setMsg('Ooops, something bad happened to the Internet! Try again later :/');\r\n        } finally {\r\n            finished.classList.remove('invis');\r\n            loading.classList.add('invis');\r\n            props.onRefresh();\r\n            setChar(0);\r\n        }\r\n    }\r\n\r\n    function checkCount() {\r\n        if (char > 200) {\r\n            document.getElementById('maxValue').classList.add('red');\r\n        } else if (char <= 200) {\r\n            if (document.getElementById('maxValue').classList.contains('red')) {\r\n                document.getElementById('maxValue').classList.remove('red');\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"add\">\r\n            <div className=\"add-title\">\r\n                <h1>Let's add some new challenges!</h1>\r\n            </div>\r\n            <div className=\"add-form\">\r\n                <p><b>{char} / <span id=\"maxValue\">200</span></b></p>\r\n                <textarea id=\"title\" onChange={e => {\r\n                    setChar(e.target.value.length)\r\n                    setTimeout(() => {\r\n                        checkCount();\r\n                    }, 200);\r\n                }}></textarea>\r\n                <br />\r\n                <br />\r\n                <button className=\"btn g m-r\" onClick={() => {\r\n                    postTodo()\r\n                    .catch(err => console.log(err))\r\n                }}>\r\n                    Utwórz nową notatkę!\r\n                </button>\r\n                <Link to=\"/\"><button className=\"btn r\">Powrót do listy</button></Link>\r\n            </div>\r\n            <div id=\"finished\" className=\"invis\">\r\n                <span>\r\n                    <h2>{msg}</h2>\r\n                    <Link to=\"/\"><button className=\"btn g\" onClick={() => finished.classList.add('invis')}>Let's go back to work!</button></Link>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default Add;","import React, { useState } from 'react';\r\n\r\nfunction Edit(props) {\r\n    const [ char, setChar ] = useState(0);\r\n    const { nr, txt, item } = props;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"editing-txt\">\r\n                <textarea name=\"edit\" placeholder={txt} id={`edited${nr}`} onChange={e => setChar(e.target.value.length)}></textarea>\r\n                <p>{char} / 200</p>\r\n            </div>\r\n            <button className=\"btn g\" onClick={() => {\r\n                const value = document.getElementById(`edited${nr}`).value;\r\n                props.onUpdate('EDITED', item, value);\r\n            }}>\r\n                Save\r\n            </button>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Edit;","import { atom } from 'recoil';\r\n\r\nconst loadState = atom({\r\n    key: 'is loaded',\r\n    default: false\r\n})\r\n\r\nexport default loadState;","import Edit from './Edit';\r\nimport loadState from '../recoils/loaded';\r\nimport { useRecoilValue } from 'recoil';\r\n\r\nfunction Task(props) {\r\n    const { item, nr } = props;\r\n    const { completed, title, created_at, updated_at } = item;\r\n    const isLoaded = useRecoilValue(loadState);\r\n\r\n\r\n    function editTask(x) {\r\n        if (isLoaded === false) {\r\n            return props.onInfo('Oh, boo hoo! Here comes the fastest finger on the west, huh? Nice try :P')\r\n        }\r\n\r\n        const edit = document.getElementById(`edit${x}`).classList;\r\n\r\n        if (edit.contains('invis-hide')) {\r\n            edit.remove('invis-hide');\r\n        } else {\r\n            edit.add('invis-hide');\r\n        }\r\n    }\r\n\r\n    function resetTasks() {\r\n        document.querySelectorAll('.editing').forEach(e => {\r\n            if (!e.classList.contains('invis-hide')) e.classList.add('invis-hide')\r\n        })\r\n    }\r\n\r\n    function showMoreInfo(nr) {\r\n        const el = document.getElementById(`info${nr}`).classList;\r\n        if (el.contains('show')) {\r\n            el.remove('show');\r\n        } else {\r\n            el.add('show');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"main-list_item\">\r\n            <span className=\"marked\">\r\n                {completed ? <h2><i className=\"bi bi-check-lg green\"></i></h2> : <h2><i className=\"bi bi-x-lg red\"></i></h2>}\r\n                <h2>ToDo #{nr}</h2>\r\n            </span>\r\n            <span className=\"text\">\r\n                <p className=\"point\" onClick={() => showMoreInfo(nr)}>{title}</p>\r\n                <div className=\"text-info fade\" id={`info${nr}`}>\r\n                    <span>Created at: {created_at}</span>\r\n                    <span>Last update: {updated_at}</span>\r\n                </div>\r\n            <div className=\"editing invis-hide\" id={`edit${nr}`}>\r\n                <Edit nr={nr} txt={title} item={item} onUpdate={(x, y, z) => props.onUpdate(x, y, z)} />\r\n            </div>\r\n            </span>\r\n            <span className=\"options\">\r\n                {completed ? <h2 onClick={() => props.onInfo('Firstly you need to undone the task!')}><i className=\"bi bi-pencil edit\"></i></h2>:<h2 onClick={() => editTask(nr)}><i className=\"bi bi-pencil edit\"></i></h2>}\r\n                {completed ? <h2 onClick={() => props.onUpdate('UNDONE', item)}><i className=\"bi bi-x-lg undone\"></i></h2>:<h2 onClick={() => {resetTasks();props.onUpdate('DONE', item)}}><i className=\"bi bi-check-lg done\"></i></h2>}\r\n                <h2 onClick={() => props.onDelete(item)}><i className=\"bi bi-trash trash\"></i></h2>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task;","import { atom } from 'recoil';\r\n\r\nconst dataState = atom({\r\n    key: 'data',\r\n    default: {\r\n        status: 'NO_DATA',\r\n        all: [],\r\n        undone: [],\r\n        done: []\r\n    }\r\n})\r\n\r\nexport default dataState;","import { atom } from 'recoil';\r\n\r\nconst searchState = atom({\r\n    key: 'search temp data',\r\n    default: {\r\n        keyword: '',\r\n        data: []\r\n    }\r\n})\r\n\r\nexport default searchState;","import React from 'react';\r\nimport { useRecoilState, useRecoilValue } from 'recoil';\r\nimport { Link } from 'react-router-dom';\r\nimport dataState from '../recoils/data';\r\nimport searchState from '../recoils/search';\r\n\r\nfunction Top() {\r\n    const data = useRecoilValue(dataState),\r\n    [ search, setSearch ] = useRecoilState(searchState);\r\n\r\n    function resetSearchVisibility() {\r\n        const elem = document.getElementById('search').classList;\r\n        if (!elem.contains('invis-hide')) {\r\n            elem.add('invis-hide');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"main-title\">\r\n                <h1>Hello! I hope you're feeling great today!</h1>\r\n                <h2>Here's some of your tasks!</h2>\r\n            </div>\r\n            \r\n            <div className=\"main-counter\">\r\n                <span className=\"count m-r\">Filter by</span>\r\n\r\n                <Link className=\"m-t\" to=\"/\">\r\n                    <span className=\"count h m-r\" onClick={() => resetSearchVisibility()}>\r\n                        <i className=\"bi bi-card-checklist green\"></i> All tasks: {data.all.length}\r\n                    </span>\r\n                </Link>\r\n\r\n                <Link className=\"m-t\" to=\"/done\">\r\n                    <span className=\"count h m-r\" onClick={() => resetSearchVisibility()}>\r\n                        <i className=\"bi bi-check-square green\"></i> Tasks done: {data.done.length > 0 ? data.done.length:0}\r\n                    </span>\r\n                </Link>\r\n\r\n                <Link className=\"m-t\" to=\"/undone\">\r\n                    <span className=\"count h m-r\" onClick={() => resetSearchVisibility()}>\r\n                        <i className=\"bi bi-x-square red\"></i> Tasks undone: {data.undone.length > 0 ? data.undone.length:0}\r\n                    </span>\r\n                </Link>\r\n\r\n                <Link to=\"/add\">\r\n                    <div id=\"add\">\r\n                        <i className=\"bi bi-plus-lg\"></i>\r\n                    </div>\r\n                </Link>\r\n\r\n                <Link className=\"m-t\" to=\"/search\">\r\n                    <span className=\"count h\" onClick={() => {\r\n                        const elem = document.getElementById('search').classList;\r\n                        if (elem.contains('invis-hide')) {\r\n                            elem.remove('invis-hide');\r\n                        } else {\r\n                            elem.add('invis-hide');\r\n                        }\r\n                    }}>\r\n                        <i className=\"bi bi-search\"></i>\r\n                    </span>\r\n                </Link>\r\n\r\n                <div className=\"invis-hide\" id=\"search\">\r\n                    <input type=\"text\" placeholder={search.keyword} onChange={c => {\r\n                        const filter = data.all.filter(f => f.title.includes(c.target.value));\r\n                        setSearch({\r\n                            keyword: c.target.value,\r\n                            data: filter\r\n                        });\r\n                    }}/>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Top;","function Info(props) {\r\n    const { info } = props;\r\n\r\n    return (\r\n        <div id=\"info\" className=\"invis\">\r\n            <span>\r\n                <h2>{info}</h2>\r\n                <button className=\"btn g\" onClick={() => document.getElementById('info').classList.add('invis')}>Okay!</button>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Info;","import { atom } from 'recoil';\r\n\r\nconst infoState = atom({\r\n    key: 'info',\r\n    default: ''\r\n})\r\n\r\nexport default infoState;","import { atom } from 'recoil';\r\n\r\nconst random = Math.random().toString(20).substr(2, 20);\r\nconst post = {\r\n    name: random,\r\n    gender: \"Male\",\r\n    email: `${random}@what.com`,\r\n    status: \"Active\"\r\n}\r\n\r\nconst userData = atom({\r\n    key:\"data for create new user\",\r\n    default: post\r\n})\r\n\r\nexport default userData;","import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { useRecoilState, useRecoilValue } from 'recoil';\r\nimport Add from './Add';\r\nimport Task from './Task';\r\nimport Top from './Top';\r\nimport Info from './Info';\r\nimport dataState from '../recoils/data';\r\nimport infoState from '../recoils/info';\r\nimport loadState from '../recoils/loaded';\r\nimport searchState from '../recoils/search';\r\nimport userID from '../recoils/user';\r\nimport userData from '../recoils/userData';\r\n\r\nfunction List() {\r\n    const [ data, setData ] = useRecoilState(dataState),\r\n    [ info, setInfo ] = useRecoilState(infoState),\r\n    [ isLoaded, setIsLoaded ] = useRecoilState(loadState),\r\n    [ search, setSearch ] = useRecoilState(searchState),\r\n    [ user, setUser ] = useRecoilState(userID),\r\n    postUser = useRecoilValue(userData),\r\n    [ isPosted, setIsPosted ] = useState(false),\r\n    loading = document.getElementById('loading');\r\n\r\n    async function fetchData() {\r\n        const res = await fetch(`https://gorest.co.in/public-api/users/${user}/todos?access-token=a72dccbb572f8052c337da5c29c96abfe9096b6207999d422cc88b28ec6e55a9`);\r\n        const data = res.json();\r\n        return data;\r\n    }\r\n\r\n    async function fetchUser() {\r\n        const res = await fetch(`https://gorest.co.in/public-api/users/${user}?access-token=a72dccbb572f8052c337da5c29c96abfe9096b6207999d422cc88b28ec6e55a9`);\r\n        const data = res.json();\r\n        return data;\r\n    }\r\n\r\n    async function fetchNewUser() {\r\n        const res = await fetch('https://gorest.co.in/public-api/users/', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Authorization':'Bearer a72dccbb572f8052c337da5c29c96abfe9096b6207999d422cc88b28ec6e55a9'\r\n            },\r\n            body: JSON.stringify(postUser)\r\n        })\r\n        const data = res.json();\r\n        setIsPosted(true);\r\n        return data;\r\n    }\r\n\r\n    function downloadData() {\r\n        if (isLoaded === true) return;\r\n        fetchData()\r\n        .then(res => {\r\n            if (res.code === (200 || 201) && res.data.length === 0) {\r\n                updateDataState('NO_TASKS');\r\n                setIsLoaded(true);\r\n\r\n            } else if (res.code === 404) {\r\n                updateDataState('CONNECTION_ERR');\r\n\r\n            } else if (res.code === (200 || 201) && res.data.length > 0) {\r\n                updateDataState('READY', res.data, res.data.filter(f => f.completed === false), res.data.filter(f => f.completed === true))\r\n                setSearch({\r\n                    keyword: search.keyword,\r\n                    data: data.all.filter(f => f.title.includes(search.keyword))\r\n                });\r\n                setIsLoaded(true);\r\n            }\r\n        })\r\n        .catch(err => {\r\n            updateDataState('CONNECTION_ERR');\r\n            console.log(`I detected some pointless and unwanted errors! Have a nice tea! ${err}`)\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchUser()\r\n        .then(res => {\r\n            if (res.code === 404 && isPosted === false) {\r\n                fetchNewUser()\r\n                .then(resp => {\r\n                    if (resp !== undefined && resp.data.id !== undefined) {\r\n                        setUser(resp.data.id);\r\n                        localStorage.setItem(\"id\", JSON.stringify(resp.data.id));\r\n                    }\r\n                });\r\n            }\r\n        })\r\n        .then(() => {\r\n            if (user < 0) return;\r\n            downloadData()\r\n        });\r\n    })\r\n\r\n    function updateDataState(status = 'NO_DATA', all = [], undone = [], done = []) {\r\n        setData({\r\n            status: status,\r\n            all: all,\r\n            undone: undone,\r\n            done: done\r\n        })\r\n    }\r\n\r\n    function checkData(type) {\r\n        let tasks;\r\n\r\n        switch (type) {\r\n            case 'FILTER_UNDONE':\r\n                tasks = data.undone;\r\n                break;\r\n            case 'FILTER_DONE':\r\n                tasks = data.done;\r\n                break;\r\n            case 'FILTER_SEARCH':\r\n                tasks = search.data;\r\n                break;\r\n            default:\r\n                tasks = data.all;\r\n                break;\r\n        };\r\n\r\n        switch(data.status) {\r\n            case 'NO_DATA':\r\n                return (\r\n                    <div id=\"loading\">\r\n                        <h2>\r\n                            Loading... \r\n                            <svg id=\"pencil\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-pencil\" viewBox=\"0 0 16 16\">\r\n                                <path d=\"M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z\"/>\r\n                            </svg>\r\n                        </h2>\r\n                    </div>\r\n                );\r\n            case 'NO_TASKS':\r\n                return (\r\n                    <div className=\"result\">\r\n                        Looks like there are no tasks available. Beer and chill? &#127866;&#128526;\r\n                    </div>\r\n                );\r\n            case 'CONNECTION_ERR':\r\n                return (\r\n                    <div className=\"result\">\r\n                        Oh no, something bad happened to the internet! &#128552; Check your connection or try again later! &#128521;\r\n                    </div>\r\n                );\r\n            default:\r\n                let nr = 0;\r\n                if (tasks.length === 0) return (\r\n                    <div className=\"result\">\r\n                        Looks like there are no tasks available. Beer and chill? &#127866;&#128526;\r\n                    </div>\r\n                )\r\n                return (\r\n                    tasks.map(el => {nr++;\r\n                        return <Task key={el.id} item={el} nr={nr} onDelete={(x) => deleteTask(x)} onInfo={(x) => showInfo(x)} onUpdate={(x, y, z) => updateTask(x, y, z)} />\r\n                    })\r\n                );\r\n        };\r\n    };\r\n\r\n    function createComponent(type) {\r\n        return (\r\n            <div className=\"main\">\r\n                <Top />\r\n                {checkData(type)}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    async function deleteTask(x) {\r\n        let check;\r\n        if (x.completed === false) {\r\n            check = window.confirm('Do you reaaally want to delete this task? It seems it\\'s not done yet :/');\r\n        } else {\r\n            check = window.confirm('Do you really want to delete this task? It\\'s done, so no problem ;)');\r\n        }\r\n        if (check) {\r\n            loading.classList.remove('invis');\r\n\r\n            const res = await fetch(`https://gorest.co.in/public-api/todos/${x.id}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Authorization':'Bearer a72dccbb572f8052c337da5c29c96abfe9096b6207999d422cc88b28ec6e55a9'\r\n                }\r\n            });\r\n            const data = res.json();\r\n            loading.classList.add('invis');\r\n            setIsLoaded(false);\r\n            return data;\r\n        };\r\n\r\n    };\r\n\r\n    async function updateTask(type, item, value) {\r\n        let patch = {};\r\n\r\n        switch (type) {\r\n            case 'DONE':\r\n                patch = {\r\n                    completed: true\r\n                };\r\n                break;\r\n            case 'UNDONE':\r\n                patch = {\r\n                    completed: false\r\n                };\r\n                break;\r\n            case 'EDITED':\r\n                if(!checkEdited(value)) return;\r\n                patch = {\r\n                    title: value,\r\n                };\r\n                break;\r\n            default:\r\n                return;\r\n        };\r\n        loading.classList.remove('invis');\r\n\r\n        const res = await fetch(`https://gorest.co.in/public-api/todos/${item.id}`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Authorization':'Bearer a72dccbb572f8052c337da5c29c96abfe9096b6207999d422cc88b28ec6e55a9'\r\n            },\r\n            body: JSON.stringify(patch)\r\n        });\r\n\r\n        const data = res.json();\r\n        setIsLoaded(false);\r\n        loading.classList.add('invis');\r\n        return data;\r\n    };\r\n\r\n    function checkEdited(val) {\r\n        if (val.length > 200) {\r\n            showInfo('Too many characters! I can\\'t handle it! :(');\r\n            return false;\r\n        } else if (val.length < 5) {\r\n            showInfo('Even a small task need some words to describe. Try at least 5 characters! :)')\r\n            return false;\r\n        } else {\r\n            return true;\r\n        };\r\n    };\r\n\r\n    function showInfo(txt) {\r\n        setInfo(txt);\r\n        document.getElementById('info').classList.remove('invis');\r\n    };\r\n\r\n    return (\r\n            <React.Fragment>\r\n                <Info info={info}/>\r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                        {createComponent()}\r\n                    </Route>\r\n                    <Route path=\"/undone\">\r\n                        {createComponent('FILTER_UNDONE')}\r\n                    </Route>\r\n                    <Route path=\"/done\">\r\n                        {createComponent('FILTER_DONE')}\r\n                    </Route>\r\n                    <Route path=\"/add\">\r\n                        <Add onRefresh={() => setIsLoaded(false)} onInfo={(x) => showInfo(x)} />\r\n                    </Route>\r\n                    <Route path=\"/search\">\r\n                        {createComponent('FILTER_SEARCH')}\r\n                    </Route>\r\n                </Switch>\r\n            </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default List;\r\n","function Loading() {\r\n    return (\r\n        <div id=\"loading\" className=\"invis\">\r\n            <h2>\r\n                Loading... \r\n                <svg id=\"pencil\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-pencil\" viewBox=\"0 0 16 16\">\r\n                    <path d=\"M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z\"/>\r\n                </svg>\r\n            </h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading;","function Footer() {\r\n    return (\r\n        <div className=\"footer\">\r\n            <p>&reg; Copyright 2021 - Daniel Krawczyk</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import { RecoilRoot } from 'recoil';\r\nimport List from './components/List';\r\nimport Loading from './components/Loading';\r\nimport Footer from './components/Footer';\r\n\r\nfunction App() {\r\n    return (\r\n        <RecoilRoot>\r\n            <List />\r\n            <Loading />\r\n            <Footer />\r\n        </RecoilRoot>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport './styles/main.css';\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}